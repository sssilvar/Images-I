library(zoo)
na.locf(dx)
dx
dx <- get_diagnoses(adnimerge, 671)$DX
dx
na.locf(dx)
diff(na.locf(dx))
class(na.locf(dx))
levels(na.locf(dx))
diff(as.integer(na.locf(dx)))
sum(diff(as.integer(na.locf(dx))))
baseline[1, ]$sex <- 'M'
baseline$sex
baseline$sex <- 'Male'
baseline$sex
baseline$sex[2] <- 'Male'
baseline$sex[2] <- 'Female'
baseline$sex[2]
class(adnimerge$Month)
levels(adnimerge$Month)
get_diagnoses <- function(tb, id) {
# Returns all the diagnoses related to an specific ID
subject <- tb[which( tb$RID == id ), ]
dxs <- subject$DX
dx_grad <- sum(diff(as.integer(dxs)))
if (dx_grad == 1){
label <- "MCI to Dementia"
} else if (dx_grad == 0) {
label <- "MCI Stable"
} else if (dx_grad == -1) {
label <- "Regression"
} else {
label <- "NA"
}
subject$label <- label
return(subject)
}
class(adnimerge$Month)
dx <- get_diagnoses(adnimerge, 671)
library(ADNIMERGE)
library(ggplot2)
library(dplyr)
library(zoo)
get_diagnoses <- function(tb, id) {
# Returns all the diagnoses related to an specific ID
subject <- tb[which( tb$RID == id ), ]
dxs <- subject$DX
print(dxs)
dx_grad <- sum(diff(as.integer(dxs)))
if (dx_grad == 1){
label <- "MCI to Dementia"
} else if (dx_grad == 0) {
label <- "MCI Stable"
} else if (dx_grad == -1) {
label <- "Regression"
} else {
label <- "NA"
}
subject$label <- label
return(subject)
}
# Get sex and diagnose
baseline <- adnimerge %>%
filter(Month == 0 & !is.na(AGE) & DX == 'MCI')
dx <- get_diagnoses(adnimerge, 671)
# ggplot(baseline, aes(x=RID)) + geom_histogram(binwidth = 1)  # Check RID is unique
# Plot age and diagnosis
# ggplot(baseline, aes(x = DX.bl , y = AGE, color = PTGENDER)) + geom_boxplot()
# summary(baseline)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
with(dx, fill.forward(DX))
with(dx, fill.forward(DX))
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
with(dx, fill.forward(DX))
dx
dx$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dx
dx$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dx$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dx$label
dx <- get_diagnoses(adnimerge, 729)
dx
dx$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dxs <- sapply(mci_subj_rids, get_diagnoses, tb = adnimerge)
dxs
data.frame(dxs)
df <- data.frame(dxs)
head(df)
dxs <- lapply(mci_subj_rids, get_diagnoses, tb = adnimerge)
dxs
dxs <- data.frame(lapply(mci_subj_rids, get_diagnoses, tb = adnimerge))
head(dxs)
dxs$label
len(adnimerge)
length(adnimerge)
dxs <- as.data.frame(lapply(mci_subj_rids, get_diagnoses, tb = adnimerge))
dxs
length(dxs)
dxs <- lapply(mci_subj_rids, get_diagnoses, tb = adnimerge)
length(dxs)
length(dxs[0])
length(dxs[1])
length(dxs[1, ])
dxs[1]
df = as.data.frame(dxs)
length(df)
library(tibble)
df = as_tibble(dxs)
class(dxs[1])
class(dxs)
df = as_tibble(unlist(dxs))
df
dxs <- apply(mci_subj_rids, get_diagnoses, tb = adnimerge)
dxs <- apply(mci_subj_rids, get_diagnoses, tb = adnimerge)
?apply
cbind(dxs)
df <- as.data.frame(cbind(dxs))
df
lenght(df)
length(df)
length(dxs)
df <- as.data.frame(matrix(unlist(dxs)), nrow=length(unlist(dxs)))
length(df)
df <- as.data.frame(matrix(unlist(dxs)), nrow=length(unlist(dxs[1])))
length(df)
length(unlist(dxs[1]))
length(adnimerge[1, ])
df <- as.data.frame(matrix(unlist(dxs)), nrow=length(unlist(dxs[1])))
length(df)
df <- as.data.frame(t(unlist(dxs)))
length(df)
df[1]
df <- as.data.frame(rbind(dxs))
df[1]
length(df)
names(dxs[1])
names(dxs)
names(dxs[2])
names(df)
dxs[1]
test <- dxs[1]
test
test.names
names(test)
names(unlist(test))
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dfb <- rbind(dxs)
class(dfb)
dfb <- as.data.frame(rbind(dxs))
class(dfb)
dfb <- as_tibble(rbind(dxs))
class(dfb)
length(dfb)
head(dfb)
dfb <- as.data.frame(rbind(dxs, names = names(unlist(dxs[1]))))
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
dxs[1]
colnames(dxs) <- names(unlist(dxs[1]))
names(unlist(dxs[1]))
length(names(unlist(dxs[1])))
colnames(dxs)
dxs
class(names(unlist(dxs[1])))
names(unlist(dxs[1]))
c(names(unlist(dxs[1])))
class(c(names(unlist(dxs[1]))))
colnames(dxs) <- c(names(unlist(dxs[1])))
mci_t <- as_tibble(dxs)
head(mci_t, n= 2)
c(1,2,3,4)
class(c(1,2,3,4))
colnames(dxs) <- names(unlist(dxs[1]))
colnames(dxs) <- names(unlist(dxs[1]))
dxs <- rbind.data.frame(lapply(mci_subj_rids, get_diagnoses, tb = adnimerge))
colnames(dxs)
length(dxs)
class(dxs)
head(dxs, n=1)
mci_t <- as_tibble(dxs)
head(mci_t, n=1)
mci_t$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
length(dxs)
dxs <- lapply(mci_subj_rids, get_diagnoses, tb = adnimerge)
length(dxs)
class(dxs)
as_tibble(dxs)
df <- as.data.frame(dxs)
df <- as_tibble(rbind(dxs))
length(dxs)
head(dxs, n=1)
head(dxs, n=5)
head(df, n=5)
colnames(df) <- names(unlist(dxs[1]))
head(df, n=5)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
head(mci_t)
dxs <- rbind(unlist(lapply(mci_subj_rids, get_diagnoses, tb = adnimerge)))
e(dxs)
colnames(mci_t) <- names(unlist(dxs[1]))
mci_t <- as_tibble(dxs)
colnames(mci_t) <- names(unlist(dxs[1]))
mci_t
dxs <- rbind(lapply(mci_subj_rids, get_diagnoses, tb = adnimerge))
length(dxs)
mci_t <- as.data.frame(dxs)
colnames(mci_t) <- names(unlist(dxs[1]))
head(mci_t)
summary(mci_t)
mci_t <- as.data.frame(dxs, stringsAsFactors = TRUE)
summary(mci_t)
colnames(mci_t) <- names(unlist(dxs[1]))
summary(mci_t)
mci_t$label
mci_t$label
mci_t <- as.data.frame(t(dxs), stringsAsFactors = TRUE)
colnames(mci_t) <- names(unlist(dxs[1]))
mci_t[1, ]
mci_t[5, ]
head(mci_t)
colnames(mci_t)
for (id in baseline$RID) {
print(id)
}
for (id in baseline$RID) {
baseline$label[which(baseline$RID == id)] <- get_diagnoses(id, adnimerge)
}
warnings()
baseline$label
for (id in baseline$RID) {
dx <- get_diagnoses(id, adnimerge)
print(dx)
baseline$label[which(baseline$RID == id)] <- dx
}
library(ADNIMERGE)
library(ggplot2)
library(dplyr)
library(tibble)
library(zoo)
get_diagnoses <- function(id, tb) {
# Returns all the diagnoses related to an specific ID
subject <- tb[which( tb$RID == id ), ]
dxs <- subject$DX
dx_grad <- sum(diff(as.integer( na.locf(dxs) )))
if (dx_grad == 1){
label <- "MCI to Dementia"
} else if (dx_grad == 0) {
label <- "MCI Stable"
} else if (dx_grad == -1) {
label <- "Regression"
} else {
label <- "NA"
}
# subject$label <- label
# return(unlist(subject[which(subject$Month == 0), ]))
print(label)
return(label)
}
# Get sex and diagnose
baseline <- adnimerge %>%
filter(Month == 0 & !is.na(AGE) & DX == 'MCI')
for (id in baseline$RID) {
dx <- get_diagnoses(id, adnimerge)
cat("Inside for", dx)
# baseline$label[which(baseline$RID == id)] <- dx
}
library(ADNIMERGE)
library(ggplot2)
library(dplyr)
library(tibble)
library(zoo)
get_diagnoses <- function(id, tb) {
# Returns all the diagnoses related to an specific ID
subject <- tb[which( tb$RID == id ), ]
dxs <- subject$DX
dx_grad <- sum(diff(as.integer( na.locf(dxs) )))
if (dx_grad == 1){
label <- "MCI to Dementia"
} else if (dx_grad == 0) {
label <- "MCI Stable"
} else if (dx_grad == -1) {
label <- "Regression"
} else {
label <- "NA"
}
return(label)
}
# Get sex and diagnose
baseline <- adnimerge %>%
filter(Month == 0 & !is.na(AGE) & DX == 'MCI')
for (id in baseline$RID) {
dx <- get_diagnoses(id, adnimerge)
baseline$label[which(baseline$RID == id)] <- dx
}
# ggplot(baseline, aes(x=RID)) + geom_histogram(binwidth = 1)  # Check RID is unique
# Plot age and diagnosis
# ggplot(baseline, aes(x = DX.bl , y = AGE, color = PTGENDER)) + geom_boxplot()
# summary(baseline)
baseline$label
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
# Plot age and diagnosis
ggplot(baseline, aes(x = DX.bl , y = AGE, color = PTGENDER, size = label)) + geom_boxplot()
# Plot age and diagnosis
ggplot(baseline, aes(x = DX.bl , y = AGE, color = PTGENDER, size = label)) + geom_point()
# Plot age and diagnosis
ggplot(baseline, aes(x = DX , y = AGE, color = PTGENDER, size = label)) + geom_point()
# Plot age and diagnosis
ggplot(baseline, aes(x = label , y = AGE, color = PTGENDER)) + geom_boxplot()
counts <- baseline %>%
group_by(label, PTGENDER) %>%
summarize(totalSubjects =  count(PTGENDER))
counts
counts <- baseline %>%
group_by(label, PTGENDER)
counts <- baseline %>%
group_by(label, PTGENDER) %>%
summarize(totalSubjects =  mean(PTGENDER))
count(baseline$label)
count(baseline$RID)
counts <- baseline %>%
group_by(label, PTGENDER) %>%
summarize(totalSubjects =  length(PTGENDER))
counts <- baseline %>%
group_by(label) %>%
summarize(totalSubjects =  length(PTGENDER))
counts
counts$totalSubjects
counts <- baseline %>%
group_by(label) %>%
summarize(totalSubjects =  mean(AGE))
counts
counts <- baseline %>%
summarize(totalSubjects =  mean(AGE))
counts
counts <- baseline %>%
summarize(totalSubjects =  mean(AGE))
counts
counts <- baseline %>%
summarize(meanAge=mean(AGE))
counts
counts <- baseline %>%
summarize(meanAge=levels(PTGENDER))
counts
counts <- adnimerge %>%
summarize(meanAge=levels(PTGENDER))
counts
test <- adnimerge %>%
summarize(meanAge=mean(AGE))
test
test <- adnimerge %>%
summarize(meanAge=mean(AGE))
test
test <- adnimerge %>%
summarize(meanAge=mean(AGE))
test
test <- adnimerge %>%
summarize(meanAge=mean(AGE))
adnimerge %>%
summarize(meanAge=mean(AGE))
head(adnimerge)
adnimerge %>%
summarize(meanAge=mean(as.integer(AGE)))
adnimerge %>% summarize(meanAge=mean(as.integer(AGE)))
adnimerge %>%
summarize(meanAge=2)
adnimerge %>%
summarize(meanAge=length(RID))
adnimerge %>%
summarize(length(RID))
library(dplyr)
adnimerge %>%
summarize(length(RID))
adnimerge %>%
summarize(a=length(RID))
adnimerge %>%
summarise(a=length(RID))
adnimerge %>%
group_by(label) %>%
summarise(totalSubjects = length(PTGENDER))
baseline %>%
group_by(label) %>%
summarise(totalSubjects = length(PTGENDER))
baseline %>%
group_by(label) %>%
summarise(totalSubjects = length(as.factor(PTGENDER)))
class(baseline$PTGENDER)
levels(baseline$PTGENDER)
levels(as.factor(baseline$PTGENDER))
levels(adnimerge$PTGENDER)
df <- as_tibble(baseline)
class(df$PTGENDER)
levels(class(df$PTGENDER))
baseline %>%
group_by(label) %>%
summarise(totalSubjects = length(factor(PTGENDER)))
baseline$PTGENDER <- as.factor(baseline$PTGENDER)
baseline %>%
group_by(label) %>%
summarise(totalSubjects = length(factor(PTGENDER)))
levels(class(df$PTGENDER))
baseline$PTGENDER <- factor(baseline$PTGENDER)
levels(class(baseline$PTGENDER))
baseline$PTGENDER <- as.factor(baseline$PTGENDER)
levels(class(baseline$PTGENDER))
baseline[, 'PTGENDER'] <- as.factor(baseline$PTGENDER)
levels(class(baseline$PTGENDER))
baseline[, 'PTGENDER'] <- as.factor(baseline[, 'PTGENDER'])
levels(class(baseline$PTGENDER))
levels(as.factor(baseline$PTGENDER))
baseline$PTGENDER <- as.factor(baseline$PTGENDER)
baseline %>%
group_by(label) %>%
summarise(totalSubjects = length(PTGENDER))
baseline$PTGENDER <- as.factor(baseline$PTGENDER)
baseline %>%
group_by(label, PTGENDER) %>%
summarise(totalSubjects = length(RID))
baseline %>%
group_by(label, PTGENDER) %>%
summarise(totalSubjects = length(RID))
table(counts$label, counts$PTGENDER)
cat("\n\n[  INFO  ] Number of participants:\n")
table(counts$label, counts$PTGENDER)
cat("\n\n[  INFO  ] Number of participants:\n")
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
source('/home/ssilvari/code/funny_coding/adnimerge/explore.R', echo=TRUE)
baseline$label
levels(baseline$label)
counts <- mcis %>%
group_by(label, PTGENDER) %>%
summarise(totalSubjects = length(RID))
table(counts$label, counts$PTGENDER)
counts
table(counts)
table(mcis$label, mcis$PTGENDER)
mcis <- baseline
table(mcis$label, mcis$PTGENDER)
reg <- regressions %>% filter(label == "Regression")
reg <- baseline %>% filter(label == "Regression")
reg
get_diagnoses <- function(id, tb, visualize = FALSE) {
# Returns all the diagnoses related to an specific ID
subject <- tb[which( tb$RID == id ), ]
dxs <- subject$DX
dx_grad <- sum(diff(as.integer( na.locf(dxs) )))
if (dx_grad == 1){
label <- "MCI to Dementia"
} else if (dx_grad == 0) {
label <- "MCI Stable"
} else if (dx_grad == -1) {
label <- "Regression"
} else {
label <- "NA"
}
if (visualize) {
print(dxs)  # DEBUG
}
return(label)
}
get_diagnoses(168, adnimerge)
get_diagnoses(168, adnimerge, visualize = TRUE)
reg$RID
get_diagnoses(reg$RID, adnimerge)
get_diagnoses(reg$RID[2], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[65], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[65], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[4], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[10], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[16], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[25], adnimerge, visualize = TRUE)
length(reg)
get_diagnoses(reg$RID[65], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[66], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[8], adnimerge, visualize = TRUE)
get_diagnoses(reg$RID[67], adnimerge, visualize = TRUE)
reg$RID[67]
reg$RID
na.omit(reg$RID)
length(na.omit(reg$RID))
for (id in reg$RID) {}
for (id in reg$RID) { cat(id, ": ", get_diagnoses(id, adnimerge, visualize = TRUE)) }
for (id in reg$RID) { cat(id, ": ", get_diagnoses(id, adnimerge, visualize = TRUE), "\n\n") }
# Plot age and diagnosis
ggplot(mcis, aes(x = label , y = AGE, color = PTGENDER)) + geom_boxplot()
mcis <- baseline %>%
filter(label != "Regression" & label != "NA")
# Plot age and diagnosis
ggplot(mcis, aes(x = label , y = AGE, color = PTGENDER)) + geom_boxplot()
table(mcis$label, mcis$PTGENDER)
table(mcis$label, mcis$PTGENDER)
head(adnimerge)
# Plot age and diagnosis
ggplot(mcis, aes(x = label , y = AGE, color = PTGENDER)) + geom_boxplot() + facet_wrap(~ COLPROT)
table(studies$label, studies$COLPROT)
studies <- mcis %>%
group_by(COLPROT) %>%
summarise(subjects = length(label))
table(studies$label, studies$COLPROT)
table(mcics$label, mcics$COLPROT)
table(mcis$label, mcis$COLPROT)
